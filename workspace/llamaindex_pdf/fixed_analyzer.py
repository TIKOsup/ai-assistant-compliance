# fixed_analyzer.py
import pymupdf4llm
import sys
import os
import argparse
from datetime import datetime
import json

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º OpenAI –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏
os.environ['OPENAI_API_KEY'] = ''

try:
    from llama_index.core import VectorStoreIndex, SimpleDirectoryReader, Settings, Document
    from llama_index.embeddings.huggingface import HuggingFaceEmbedding
    from llama_index.llms.ollama import Ollama
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
    Settings.embed_model = HuggingFaceEmbedding(
        model_name="sentence-transformers/all-MiniLM-L6-v2"
    )
    Settings.llm = Ollama(model="llama3.1:8b", request_timeout=120.0)
    
    print("‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
    
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install llama-index sentence-transformers")
    sys.exit(1)

def simple_contract_analysis(pdf_path, regulations_path="./regulations"):
    """–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–æ–≥–æ–≤–æ—Ä–∞"""
    print(f"üöÄ –ê–Ω–∞–ª–∏–∑ –¥–æ–≥–æ–≤–æ—Ä–∞: {os.path.basename(pdf_path)}")
    
    # 1. –ß–∏—Ç–∞–µ–º PDF –¥–æ–≥–æ–≤–æ—Ä–∞
    print("üìÑ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ PDF...")
    try:
        contract_text = pymupdf4llm.to_markdown(pdf_path)
        print(f"‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–æ {len(contract_text)} —Å–∏–º–≤–æ–ª–æ–≤")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è PDF: {e}")
        return
    
    # 2. –ß–∏—Ç–∞–µ–º —Ä–µ–≥–ª–∞–º–µ–Ω—Ç—ã
    print("üìö –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–æ–≤...")
    try:
        if not os.path.exists(regulations_path):
            print(f"‚ùå –ü–∞–ø–∫–∞ {regulations_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        
        # –ß–∏—Ç–∞–µ–º –≤—Å–µ PDF —Ñ–∞–π–ª—ã –∏–∑ –ø–∞–ø–∫–∏ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–æ–≤
        regulation_texts = []
        for file in os.listdir(regulations_path):
            if file.lower().endswith('.pdf'):
                file_path = os.path.join(regulations_path, file)
                try:
                    text = pymupdf4llm.to_markdown(file_path)
                    regulation_texts.append(f"=== {file} ===\n{text}")
                    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω: {file}")
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ {file}: {e}")
        
        all_regulations = "\n\n".join(regulation_texts)
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(regulation_texts)} —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–æ–≤")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–æ–≤: {e}")
        return
    
    # 3. –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑
    print("üîç –ê–Ω–∞–ª–∏–∑ –¥–æ–≥–æ–≤–æ—Ä–∞...")
    
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –≤ –æ–¥–∏–Ω –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    combined_text = f"""
–†–ï–ì–õ–ê–ú–ï–ù–¢–´ –ò –ü–†–ê–í–ò–õ–ê:
{all_regulations[:10000]}  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä

–ê–ù–ê–õ–ò–ó–ò–†–£–ï–ú–´–ô –î–û–ì–û–í–û–†:
{contract_text}

–ó–ê–î–ê–ß–ê:
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –¥–æ–≥–æ–≤–æ—Ä –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞–º –∏ –æ–ø—Ä–µ–¥–µ–ª–∏:
1. –†–ï–®–ï–ù–ò–ï: –ü–†–ò–ù–Ø–¢–¨ –∏–ª–∏ –û–¢–ö–ê–ó–ê–¢–¨
2. –ü–†–ò–ß–ò–ù–ê: –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ —Å–æ —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ä–µ–≥–ª–∞–º–µ–Ω—Ç
3. –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò: –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –µ—Å–ª–∏ –Ω—É–∂–Ω—ã

–û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞:
- –°–∞–Ω–∫—Ü–∏–æ–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏
- –í–∞–ª—é—Ç–Ω–æ–µ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
- –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ—Ä–º–∞—Ç–∏–≤–∞–º
- –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏ –ª–∏–º–∏—Ç—ã
"""
    
    try:
        # –°–æ–∑–¥–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –∏ –∏–Ω–¥–µ–∫—Å
        doc = Document(text=combined_text)
        index = VectorStoreIndex.from_documents([doc])
        
        # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å
        query_engine = index.as_query_engine()
        response = query_engine.query("–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –¥–æ–≥–æ–≤–æ—Ä –∏ –¥–∞–π –∑–∞–∫–ª—é—á–µ–Ω–∏–µ")
        
        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("\n" + "="*60)
        print("üìã –†–ï–ó–£–õ–¨–¢–ê–¢ –ê–ù–ê–õ–ò–ó–ê:")
        print("="*60)
        print(str(response))
        print("="*60)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
        with open("analysis_result.txt", "w", encoding="utf-8") as f:
            f.write(f"–ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞: {pdf_path}\n")
            f.write(f"–î–∞—Ç–∞: {datetime.now().isoformat()}\n")
            f.write("="*60 + "\n")
            f.write(str(response))
        
        print("üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ analysis_result.txt")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {e}")

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python fixed_analyzer.py contract.pdf")
        sys.exit(1)
    
    pdf_file = sys.argv[1]
    simple_contract_analysis(pdf_file)