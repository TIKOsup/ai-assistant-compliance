# debug_analyzer.py
import os
import sys

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    try:
        import llama_index
        print("‚úÖ llama_index —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("‚ùå llama_index –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False
    
    try:
        from llama_index.core import VectorStoreIndex, SimpleDirectoryReader
        print("‚úÖ llama_index.core –¥–æ—Å—Ç—É–ø–µ–Ω")
    except ImportError:
        print("‚ùå llama_index.core –ù–ï –¥–æ—Å—Ç—É–ø–µ–Ω")
        return False
    
    try:
        import pymupdf4llm
        print("‚úÖ pymupdf4llm —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("‚ùå pymupdf4llm –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False
    
    try:
        from sentence_transformers import SentenceTransformer
        print("‚úÖ sentence_transformers —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("‚ùå sentence_transformers –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False
    
    return True

def test_file_loading():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–æ–≤"""
    regulations_path = "./regulations"
    
    if not os.path.exists(regulations_path):
        print(f"‚ùå –ü–∞–ø–∫–∞ {regulations_path} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return False
    
    files = os.listdir(regulations_path)
    pdf_files = [f for f in files if f.lower().endswith('.pdf')]
    
    print(f"üìÅ –ù–∞–π–¥–µ–Ω–æ PDF —Ñ–∞–π–ª–æ–≤: {len(pdf_files)}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–¥–∏–Ω —Ñ–∞–π–ª
    if pdf_files:
        test_file = os.path.join(regulations_path, pdf_files[0])
        print(f"üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª: {pdf_files[0]}")
        
        try:
            import pymupdf4llm
            text = pymupdf4llm.to_markdown(test_file)
            print(f"‚úÖ –§–∞–π–ª –ø—Ä–æ—á–∏—Ç–∞–Ω, –¥–ª–∏–Ω–∞: {len(text)} —Å–∏–º–≤–æ–ª–æ–≤")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {str(e)}")
            return False
    
    return False

def test_simple_index():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞...")
    
    try:
        from llama_index.core import VectorStoreIndex, Document
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
        doc = Document(text="–¢–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏")
        
        # –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –∏–Ω–¥–µ–∫—Å
        index = VectorStoreIndex.from_documents([doc])
        print("‚úÖ –ü—Ä–æ—Å—Ç–æ–π –∏–Ω–¥–µ–∫—Å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞: {str(e)}")
        return False

if __name__ == "__main__":
    print("üöÄ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if not check_dependencies():
        print("\n‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
        print("pip install llama-index llama-index-core pymupdf4llm sentence-transformers")
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã
    if not test_file_loading():
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≥—Ä—É–∑–∫–æ–π —Ñ–∞–π–ª–æ–≤")
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—é
    if not test_simple_index():
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –∏–Ω–¥–µ–∫—Å–∞")
        sys.exit(1)
    
    print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")